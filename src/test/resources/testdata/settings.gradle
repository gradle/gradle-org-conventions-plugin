import groovy.json.JsonOutput

plugins {
    id "com.gradle.enterprise"
    id "io.github.gradle.gradle-enterprise-conventions-plugin"
}

gradle.afterProject { project ->
    def remoteCache = settings.buildCache?.remote ?: new HttpBuildCache()
    def localCache = settings.buildCache?.local ?: new DirectoryBuildCache()
    project.file('remoteCacheConfiguration.json') << JsonOutput.toJson([
        url                  : (remoteCache instanceof HttpBuildCache) ? remoteCache.url?.toString() : remoteCache.server,
        allowUntrustedServer : remoteCache.allowUntrustedServer,
        allowInsecureProtocol: remoteCache.allowInsecureProtocol,
        enabled              : remoteCache.enabled,
        push                 : remoteCache.push,
        credentials          : [
            username: (remoteCache instanceof HttpBuildCache) ? remoteCache.credentials?.username : null,
            password: (remoteCache instanceof HttpBuildCache) ? remoteCache.credentials?.password : null
        ]
    ])
    project.file('localCacheConfiguration.json') << JsonOutput.toJson([
        directory                   : localCache.directory,
        removeUnusedEntriesAfterDays: localCache.removeUnusedEntriesAfterDays,
        enabled                     : localCache.enabled,
        push                        : localCache.push
    ])
}
